library(tidyverse)
library(lubridate)
library(ggplot2)

getwd()
setwd("D:/Chris Robles/Documents/Career/Google Data Analytics Class/Capstone/Case Study 1")

options(scipen = 999) #removes scientific notation to make reading large numbers easier

###### Importing data and combining it #########

jan_2022 <- read_csv("202201-divvy-tripdata.csv")
feb_2022 <- read_csv("202202-divvy-tripdata.csv")
mar_2022 <- read_csv("202203-divvy-tripdata.csv")
apr_2022 <- read_csv("202204-divvy-tripdata.csv")
may_2022 <- read_csv("202205-divvy-tripdata.csv")
jun_2022 <- read_csv("202206-divvy-tripdata.csv")
jul_2022 <- read_csv("202207-divvy-tripdata.csv")
aug_2022 <- read_csv("202208-divvy-tripdata.csv")
sep_2022 <- read_csv("202209-divvy-publictripdata.csv")
oct_2022 <- read_csv("202210-divvy-tripdata.csv")
nov_2022 <- read_csv("202211-divvy-tripdata.csv")
dec_2022 <- read_csv("202212-divvy-tripdata.csv")

# combining monthly data
trips_2022 <- rbind(jan_2022, feb_2022, mar_2022, apr_2022, may_2022, jun_2022, jul_2022, aug_2022, sep_2022, oct_2022, nov_2022, dec_2022)

###### Inspecting data ########

colnames(trips_2022)  #List of column names
nrow(trips_2022)  #How many rows are in data frame?
dim(trips_2022)  #Dimensions of the data frame?
head(trips_2022)  #See the first 6 rows of data frame
str(trips_2022)  #See list of columns and data types (numeric, character, etc)
summary(trips_2022)  #Statistical summary of data. Mainly for numerics

# making sure proper observations were assigned
table(trips_2022$member_casual) 
table(trips_2022$rideable_type)

########## Cleaning ###########

# data cleaning: checking for any missing values
sum(is.na(trips_2022$ride_id))
sum(is.na(trips_2022$end_station_id)) #missing values

# Omiting datapoints with missing information
trips_2022 <- na.omit(trips_2022)
trips_2022_v2 <- subset(trips_2022, ride_length >= 0)

####### Adding data ############

# creating a new column named 'Ride Length'
trips_2022_v2$ride_length <- difftime(trips_2022_v2$ended_at, trips_2022_v2$started_at, units = "mins")
trips_2022_v2$ride_length <- round(trips_2022_v2$ride_length, digits = 1)

# creating a new column named 'Day of Week' & 'Month
trips_2022_v2$day_of_week <- weekdays(trips_2022$started_at)
trips_2022_v2$month <- months(trips_2022$started_at)

# Creating start time column
trips_2022_v2$time <- format(trips_2022$started_at, format = "%H:%M:%S")
trips_2022_v2$time <- as.POSIXct(trips_2022$time, format = "%H:%M")

######## Analysis ############

mean(trips_2022_v2$ride_length) # mean of 17.0958 mins
median(trips_2022_v2$ride_length) # median is 10.6 mins
max(trips_2022_v2$ride_length) #max ride length is 34354.1 mins
min(trips_2022_v2$ride_length) #min ride length 0 seconds

#Digging further by looking at the type of members
aggregate(trips_2022_v2$ride_length ~ trips_2022_v2$member_casual, FUN = mean)
aggregate(trips_2022_v2$ride_length ~ trips_2022_v2$member_casual, FUN = median)
aggregate(trips_2022_v2$ride_length ~ trips_2022_v2$member_casual, FUN = max)
aggregate(trips_2022_v2$ride_length ~ trips_2022_v2$member_casual, FUN = min)
      
#fixing order
trips_2022_v2$day_of_week <- ordered(trips_2022_v2$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))

#looking further by breaking it down by day
aggregate(trips_2022_v2$ride_length ~ trips_2022_v2$member_casual + trips_2022_v2$day_of_week, FUN = mean)

#breaking up data by member type and weekday
trips_2022_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>%  #creates weekday field using wday()
  group_by(member_casual, weekday) %>%  #groups by usertype and weekday
  summarise(number_of_rides = n()							#calculates the number of rides and average duration 
            ,average_duration = mean(ride_length)) %>% 		# calculates the average duration
  arrange(member_casual, weekday)	

#creating a bar chart to visualize number of rider by type of membership and by weekday
trips_2022_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)  %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) + ggtitle('Number of Riders by Weekday') +
  geom_col(position = "dodge")

# Let's create a visualization for average duration
trips_2022_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)  %>% 
  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) + ggtitle('Average Duration (minutes) of Bike Rides by Weekday') +
  geom_col(position = "dodge")

#looking at monthly data by member type
trips_2022_v2 %>% 
  mutate(month = month(started_at, label = TRUE)) %>%  #creates weekday field using wday()
  group_by(member_casual, month) %>%  #groups by usertype and weekday
  summarise(number_of_rides = n()							#calculates the number of rides and average duration 
            ,average_duration = mean(ride_length)) %>% 		# calculates the average duration
  arrange(member_casual, month)	

# number of type of memberships by month
trips_2022_v2 %>% 
  mutate(month = month(started_at, label = TRUE)) %>% 
  group_by(member_casual, month) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, month)  %>% 
  ggplot(aes(x = month, y = number_of_rides, fill = member_casual)) + ggtitle('Number of Member Riders by Month') +
  geom_col(position = "dodge")

# average duration of riders by month
trips_2022_v2 %>% 
  mutate(month = month(started_at, label = TRUE)) %>% 
  group_by(member_casual, month) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, month)  %>% 
  ggplot(aes(x = month, y = average_duration, fill = member_casual)) + ggtitle('Average Duration (minutes) of Bike Rides by Month') +
  geom_col(position = "dodge")

# Looking at number of rides and average duration by rideable type
trips_2022_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>%  #creates weekday field using wday()
  group_by(rideable_type, weekday) %>%  #groups by usertype and weekday
  summarise(number_of_rides = n()							#calculates the number of rides and average duration 
            ,average_duration = mean(ride_length)) %>% 		# calculates the average duration
  arrange(rideable_type, weekday)	

# Number of trips by rideable type
trips_2022_v2 %>% 
  group_by(rideable_type, member_casual) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(rideable_type, member_casual)  %>% 
  ggplot(aes(x = rideable_type, y = number_of_rides, fill = member_casual)) + ggtitle('Number of Trips by Rideable Type') +
  geom_bar(stat = "identity")

#Frequency of Rides by Members throughout the day
trips_2022_v2 %>% 
  group_by(member_casual, time) %>%
  summarise(number_of_rides = n()) %>%
  ggplot(aes(x = time, y = number_of_rides, color = member_casual, group = member_casual)) +
  geom_line() +
  scale_x_datetime(date_breaks = "1 hour", minor_breaks = NULL, date_labels = "%H:%M", expand = c(0,0)) +
  theme(axis.text = element_text(angle = 90)) +
  labs(title = "Frequency of Rides througout the Day", x = "Time of Day")

########## exporting csv ########
cyclistic_tableau <- trips_2022_v2 %>%  #remove columns not needed: start_station_name, end_station_name, started_at, ended_at
  select(-c(start_station_name, end_station_name, started_at, ended_at, start_station_id, end_station_id, ride_id))
write.csv(cyclistic_tableau, file = 'D:/Chris Robles/Documents/Career/Google Data Analytics Class/Capstone/Case Study 1/CAPSTONE.csv')